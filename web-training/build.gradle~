buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:2.3'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'cargo'

group = 'pl.sebitg'
archivesBaseName = 'spring-training-web'

version = '0.1.0'
sourceCompatibility = 1.7

war {
	webAppDirName = "src/main/java"
	webXml = file("web/WEB-INF/web.xml")
	webInf { 
		from("web/WEB-INF/spring") {
			include '**/*.xml'
			into 'spring'
		} 
		from("web/WEB-INF/jsp") {
			include '**/*.jsp'
			into 'jsp'
		} 
		from("web/WEB-INF/tags") {
			include '**/*.tag'
			into 'tags'
		} 
		from("web/WEB-INF/tld") {
			include '**/*.tld'
			into 'tld'
		}
	}
	from("web/resources/css") {
		include '*.css'
		into 'web/resources/css'
	}
	from("web/resources/css") {
		include '**/*.jpg'
		include '**/*.png'
		include '**/*.gif'
		include '**/*.bmp'
		into 'web/resources/css'
	}
	from("web/resources/js") {
		include '*.js'
		into 'web/resources/js'
	}
	from("web/resources/img") {
		include '**/*.jpg'
		include '**/*.png'
		include '**/*.gif'
		include '**/*.bmp'
		into 'web/resources/img'
	}
	from("web/resources/bower_components") {
		include '**/dist/**/*.js'
		include '**/dist/**/*.css'
		include '**/dist/**/*.svg'
		include '**/dist/**/*.eot'
		include '**/dist/**/*.ttf'
		include '**/dist/**/*.woff'
		include '**/dist/**/*.map'
		include '**/*-min.js'
		include '**/*.min.js'
		include '**/*-min.map'
		include '**/*.min.map'
		into 'web/resources/bower_components'
	}
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    mavenLocal()
}

dependencies {

	compile("org.springframework:spring-context:4.0.2.RELEASE")
	compile('org.springframework:spring-context-support:4.0.5.RELEASE')
	compile('org.springframework:spring-web:4.0.2.RELEASE')
	compile("org.springframework:spring-webmvc:4.0.2.RELEASE")
	compile("org.springframework.data:spring-data-mongodb:1.5.0.RELEASE")
	compile("org.springframework.security:spring-security-web:3.2.5.RELEASE")
	compile('org.springframework.security:spring-security-config:3.2.5.RELEASE')
	compile('org.springframework:spring-aop:4.1.1.RELEASE')
	compile('org.springframework:spring-aspects:4.1.1.RELEASE')
	
	compile('org.aspectj:aspectjrt:1.7.3')
	compile("org.apache.commons:commons-lang3:3.3.2")
	
	compile('javax.servlet:jstl:1.2')
	compile('javax.servlet.jsp:jsp-api:2.1')
	compile('cglib:cglib:2.2.2')
	
	compile('org.codehaus.jackson:jackson-core-asl:1.9.13')
	compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')
            
	testCompile("org.springframework:spring-test:4.0.1.RELEASE")
	testCompile("junit:junit:4.+")
	
	def cargoVersion = '1.4.5'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

sourceSets {
	main {
		java {
			srcDir 'src/java'
		}
		resources {
			srcDir 'src/resources'
		}
	}
	test {
		java {
			srcDir 'src/java'
		}
		resources {
			srcDir 'src/resources'
		}
	}
}

uploadArchives {
  repositories {
    mavenDeployer {
      mavenLocal()
    }
  }
}

task undeploy << {
	cargo {				//Configuring cargo plugin
		containerId = externalProps['server.containerId']
		port = externalProps['server.port'].toInteger()
		remote {
			protocol = externalProps['server.protocol']
			hostname = externalProps['server.hostname']
			username = externalProps['server.username']
			password = externalProps['server.password']
		}
	}
	try {
		cargoUndeployRemote.execute();	//Executing undeploy and deploy remote tasks
	}
	catch(Exception e) {
		println "[Undeploy] undeploy failed! Maybe app does not exist in container."
	}
}

task deploy << {
	cargo {				//Configuring cargo plugin
		containerId = externalProps['server.containerId']
		port = externalProps['server.port'].toInteger()
		remote {
			protocol = externalProps['server.protocol']
			hostname = externalProps['server.hostname']
			username = externalProps['server.username']
			password = externalProps['server.password']
		}
	}
	cargoDeployRemote.execute();
}
